seatno	assignment	score	grade	comment
001	W11	352	91	  這週的主題是Microservices – Docker & ACI & AKS。講師簡單解釋了Container和Docker的差異，並介紹了Container可以在任何地方運行、Container如何運行、Container的架構。最後也帶著同學建立了需要使用的Azure Virtual Machine來實作。隨著課程，對Azure服務雖然有更近一步的認識，也完全感受到Azure的便利性，可對基礎概念不太了解的話，有時侯還是沒有很懂背後的概念，不夠了解就會有點會造成無法完全發揮它的功能。  
002	W11	345	88	  本週的企業雲端應用趨勢與實務課程要講的是Microservices Docker&ACI&AKS，AKS也就是Azure Kubernetes Service (AKS)，可讓您輕鬆部署及管理容器化應用程式。其提供無伺服器 Kubernetes、整合的持續整合與持續傳遞 (CI/CD) 體驗，以及企業級的安全性與治理。在單一平台集結您的開發與營運團隊，好整以暇地快速建置、提供及調整應用程式。而ACI也就是Azure Container Instances，ACI 提供快速且獨立的計算，可應付突然暴增的流量而不需要管理伺服器。舉例來說，Azure Kubernetes Service (AKS) 可使用 Virtual Kubelet，在 ACI 中佈建可於數秒間啟動的 Pod。這使得 AKS 能以足夠容量為您的平均工作負載執行。當您 AKS 叢集的容量不足時，可相應放大 ACI 中的其他 Pod 而無須管理額外的伺服器。透過今天學習到的內容，相信對未來有相當大的幫助，感謝今天的講師用心地介紹!  
003	W11	165	73	  今天介紹Azure Docker，介紹Container跟Docker些微的不同，Docker的實作是把容器作為一個標準化的介面，介紹何為容器其技術能夠降低風險，Container使用在何處，並說明現在產業都在往Container走，Container與以往機器的差別，沒有虛擬層的好處在於要做更新的時候，能夠直接與底層連接，壞處是若底層如果有漏洞，Container就容易有惡意程式，去盜取他人的資料，實作新增一台機器Windows Server，成功之後讓我們了解有多少個容器在執行，程式碼的說明，並將程式碼使用在剛剛建立的Windows Server，介紹剛剛我們實作的程序步驟，以及其中可能發生錯誤的地方。  
004	W11	222	79	  這禮拜的主講內容是Docker.  Container is a new way to package, version and manage software releases.  So what's a container?    * clear boundaries for your app, allowing you to know which assets belong to which app and who owns it.   * no more leftover cruft from previous installations or versions   * provides resource isolation, without the overhead of more VMs.   * better resource utilization   * repeatable builds.  什麼是容器？    * 對軟件來說有一個更透明的界線，讓大家可以更明白那些資產屬於那些app和屬於誰的。   * 不會有上個安裝或版本留下來的cruft   * 提供資源的隔離，不再有更多VM的限制   * 更多的資源應用   * 重複建置  why containers    * works on my machine   * every environment looks the same   * increased velocity   * run anywhere  containers run everywhere    * linux   * windows   * cloud   * drones, rasberry pi, iot  how do containers work?    * containers are basically highly configured processes   * they leverage kernel features to isolate processes   * groups control the resource it can consume   * namespaces contrail what the process can see   * the image format is used to move the root directory the process sees around the container image  
005	W11	240	81	  Azure Container  講師介紹了Master Node & Worker Node  了解Master Node: 主控。負責Kubernetes Clusters和Worker的工作排程、溝通以及監控其狀態。  Worker Node :Runtime Environment。負責實際Container的執行。  容器註冊服(ACR): 儲存及管理所部署之各類型容器之私人登錄中的映像及成品。 將Azure容器登錄與您現有的容器開發與部署管線搭配使用。使用 Azure Container Registry工作依需求在Azure中建置容器映像，或透過來源程式碼更新、容器基礎映像更新或計時器，觸發自動建置。  容器部署服務(ACI): 具有快速啟動的優點, 並且提供公用 IP 以及完整網域名稱 (FQDN), 可以直接由網際網路存取應用程式. 此外 ACI 具有應用程式相依性隔離和資源控管, 等同於虛擬機器的安全性管理.  
006	W11	250	82	  如何去製作containers work  基本上containter擁有基本的高適別製作  他們的特色就是去獨立運作  **Azure App Service** 為一種平台服務 (Platform-as-a-service, Paas)，提供快速且簡單操作的雲端環境，讓您可以佈署您的網站或行動應用程式  Azure App Service 可讓您以所選程式設計語言來建置及裝載 Web 應用程式、行動裝置後端以及 RESTful API，無需管理基礎結構。 它提供自動調整及高度可用性，支援 Windows 和 Linux，並可從 GitHub、Azure DevOps 或任何 Git 存放庫啟用自動部署  價格不貴又不需要維護主機讓我印象深刻，  開發者可以透過 Web App For Containers 使用自己的 containers  
007	W11	346	89	  Docker是一個 Linux Container 的輕量化的虛擬技術， 在 Azure 上也提供簡便的方式建立 Docker Host，而且 Docker 是一個 open-source 的專案，主要的特點是能將應用程式包裝在一個 Linux Container 中，當這些應用被包裝進容器後，部署、遷移都會變得更為簡單。與傳統的虛擬化技術相比，虛擬機器需要安裝作業系統才能執行應用程式，而 Container 則不需要安裝作業系統就能執行應用程式。Container 技術是一種在 OS 內的 Kernel 層所打造虛擬執行環境，所以 Container 彼此之間共用了 Host OS Kernel，但透過namespace的區分來達到隔離每個容器的目的。  
008	W11	133	66	  這次課堂上講了三個東西，其中讓我最有印象的是Docker，因為是最近相當熱門的一個名詞，是一個基於Linux Container 的輕量化的虛擬技術，而微軟也相當積極與Docker合作，在Azure上支援這個正夯的技術，並且提供簡便的方式來建立Docker Host，主要的特點是能將應用程式包裝在一個Linux Container容器中，當這些應用被包裝進容器後，部署、遷移都變得更為簡單。與傳統的虛擬化技術相比，虛擬機器需要安裝作業系統才能執行應用程式，而Container則不需要安裝作業系統就能執行應用程式，變得更方便了！  
009	W11	152	70	  這節課也是在講有關於Azure容器的操作與實作以及概念，其實在上這麼多堂課下來，不僅對於Azure的操作逐漸有感覺，而且同時也逐漸了解到對於這個領域到底是否感興趣，有一堂課的老師說到來教課的都是很有名很貴的講師，雖然聽起來好像我很浪費資源，但對於這塊領域始終沒有產生任何一絲的感覺或興趣，只覺得很神奇、很複雜，在上課的同時也能同時探索自己對於這個科目、領域是否有興趣是一件讓我覺得很感恩、很慶幸的事，謝謝每一位講師用心準備的課程。  
010	W11	275	83	  透過講師的講解了解了Docker 是一個 open-source 的專案，主要的特點是能將應用程式包裝在一個 LXC (Linux Container) 容器中，當這些應用被包裝進容器後，部署、遷移都變得更為簡單。與傳統的虛擬化技術相比，虛擬機器需要安裝作業系統才能執行應用程式，而 Container 則不需要安裝作業系統就能執行應用程式。Container 技術是一種在 OS 內的 Kernel 層所打造虛擬執行環境，所以 Container 彼此之間共用了 Host OS 的 Kernel，但透過 namespace 區分來達到隔離每個容器的目的。看著講師一步步操作且解說那些複雜的程式碼，比自己去研究來的容易理解許多。  
011	W11	150	70	  這次的上課內容，是有關microservices，並且介紹該怎麼使用以及Azure 能帶來什麼好處。經過這次上課雖然還不是很了解今天內容的確切的用法。但是，回朔到幾個禮拜前，那時我還不清楚Azure的功用，對Azure仍然一無所知，現在至少慢慢知道Azure在幹嘛了，以及透過課堂學習慢慢了解到裡面的功能，雖然不能說對每一個功能都聊若指掌，但至少有個概念了。  而且今天的講師非常的用心教導大家，上課時也分享很多出社會後的心路歷程，我覺得這些對我的幫助很大，講師也很關心的問大家有沒有問題，覺得今天的內容滿豐富的。  
012	W11	162	73	  在這堂課企業雲端應用趨勢與實務中，今天10月29日一樣邀請到微軟的黃耀逸講師進行演講，黃老師之前也有來講過課，而今天延續上次的Azure的介紹，今天教我們用LUIS ，LUIS是一種API雲端式服務，可將自訂機器學習智慧套用至使用者的對話、自然語言文字中，預測整體意義，找出相關的詳細資訊。講師也說到BMW 3系列的轎車的車載系統也是使用LUIS，代表LUIS不只在教學，更在業界上廣為使用，講師利用現在市面上實際的案子舉例給我們聽，讓我對這個技術更有興趣，今天的教學也讓我很有收穫。  
013	W11	276	83	  Windows Containers 提供一個輕量級、隔離的環境，讓應用程式可以更容易開發、部署及管理。Containers可以快速地開始和停止，非常適用於那些需要快速應變速度的App。  今天講師帶著我們初步了解各種Containers的基本使用方式，首先Azure Container Registry 提供異地複寫，這可以有效管理多個區域間的登錄。OCI 成品存放庫，可以新增 Helm 圖表、Singularity 支援，還提供自動建置與修補容器。ACR的整合安全性，當中也提供 Azure Active Directory (Azure AD) 驗證、角色型存取控制、Docker 內容信任，以及虛擬網路整合。  Azure Web App for Container 則是能夠使應用程式在雲端中執行，就不用自己管理伺服器了！  也可以將Containers 整合到Azure的web app中，使開發更方便。  雖然今天講的東西我不是聽得很懂，但是我又進一步了解Azure所提供的服務了。  
014	W11	377	98	  今天是請到上次講解Azure DevOps的黃承皓講師來為我們上課，今天是講Azure Docker & ACI & AKS。首先Docker 是一個 open-source 的專案，它的特點是能將應用程式包裝在一個容器中，Docker是一個流行的容器管理和映像平台，可以在Linux和Windows上快速使用容器，當這些應用程式被包裝進容器後，部署、遷移都變得簡單。跟傳統的虛擬化技術相比，虛擬機器需要安裝作業系統才能執行應用程式，而Docker則不需要安裝作業系統就能執行應用程式，Docker 優點有支援 Linux 和 Windows Server 容器、彈性支援微服務和傳統應用程式工作負載。和Azure 整合的優點也多。  
015	W11	347	90	  這星期的課跟第五周的課對調，今天是教我們用容器實際操作，講師教我們如何操作虛擬機開發，首先要先到moodle 平台點選網址下載程式碼，接著實際操作，講師也是一步一步的教我們如何開發實際操作，Azure Virtual Machine 虛擬機執行容器運算分成許多系列，其中A 系列適用於開發/測試的初階實惠 VM，A 系列 VM 的 CPU 效能及記憶體設定最適合初階的工作負載，例如開發及測試，對剛開始使用 Azure 而言，是項實惠的低成本選項。Av2 Standard 是最新一代的 A 系列 VM，其具有相似的 CPU 效能，但每個 vCPU 有更多 RAM，磁碟也更快。每次的需求都是由分布在不同容器中的服務來分散處理，所以有導入流程管控引擎的必要，整個需求處理的工作流程被管控、追蹤，才能實現例外處理、容錯、退回以及交易的工作。今天還教了Azure Container Registry (ACR)容器註冊服務、Azure Container Instances (ACI)容器部署服務、Azure Web App for Container 容器版網頁程式服務、Azure Kubernetes Service (AKS)容器協調器服務等等…，今天的課感覺受益良多，可是當時沒有邊聽邊打心得，而且有些步驟沒有跟上，實作偏趕一點有些小細節的重點可能被我略過，只能談個大概，希望下次可以更專注，這楊才能學得更完整一些，之後自己也會比較知道要怎麼操作。  
017	W11	349	90	  今天講師一開始談到app的部屬，過去在還沒有Container時會架設在一台電腦 一個雲端、一個伺服器等等。談論到Containers的優點等等，相同的環境然後在任何地方都可以執行，以往在VM時都還要透過hypervisor進行虛擬化而Container才能夠直接跟OS進行連接，並接效率、效能會比較好但相對的安全性是有疑慮，之後講師開創一個VM並一步步的帶我們實作Docker的指令去執行、部屬一個容器。作為一種新興的虛擬化方式，Docker 跟傳統的虛擬化方式相比具有眾多的優勢。 首先，Docker 容器的啟動可以在秒級實作，這相比傳統的虛擬機方式要快得多。 其次，Docker 對系統資源的使用率很高，一台主機上可以同時執行數千個 Docker 容器。 容器除了執行其中應用外，基本不消耗額外的系統資源，使得應用的效能很高，同時系統資源消耗更少。傳統虛擬機方式執行 10 個不同的應用就要啟動 10 個虛擬機，而 Docker 只需要啟動 10 個隔離的應用即可。  
018	W11	108	62	  本週主題為Docker&ACI&AKS，其中container容器技術是老師從學期初就不斷強調的一項技術，感覺本週課程也特別有難度和挑戰性，我覺得這項技術有一定的操作難度，也因為講師介紹了很多東西，一次接受了太多資訊，實在很難一次把握，我也只能努力的把能理解的部分吸收，不過講師講解很細心詳盡，還會附帶舉例，即使這次操作並沒有跟上，也沒有太多可以讓我們實作的時間，但還是依然有收穫到一些有價值的資訊。  
019	W11	381	99	  這堂課在介紹zure Docker & ACI & AKS首先Docker 是一個 open-source 的專案，主要的特點是能將應用程式包裝在一個 LXC容器中，當這些應用被包裝進容器後，部署、遷移都變得更為簡單。與傳統的虛擬化技術相比，虛擬機器需要安裝作業系統才能執行應用程式，而 Container 則不需要安裝作業系統就能執行應用程式。  Container 技術是一種在 OS 內的 Kernel 層所打造虛擬執行環境，所以 Container 彼此之間共用了 Host OS 的 Kernel，但透過 namespace 區分來達到隔離每個容器的目的。  而ACI容器即將成為封裝、部署及管理雲端應用程式的慣用方法。 Azure Container Instances 提供更簡單快速的方法，讓您無需管理任何虛擬機器或採用更高層級的服務，就能在 Azure 中執行容器。  對於可在隔離容器中運作的任何情節，包括簡單的應用程式、工作自動化及建置工作，Azure Container Instances 是很棒的解決方案。 對於需要完整容器協調流程的情節，包括跨多個容器的服務探索、自動縮放及協調性應用程式升級，我們建議使用 Azure Kubernetes Service (AKS)。  
020	W11	135	66	  這次主講內容首先是介紹「容器container」，也講述到了VM與容器的差異及各自優缺，其中容器的改善包含可以在自己的電腦跑、可移動性高、增加效率、在各種環境上運行。VM有Host OS以及Hypervisor層(做虛擬化動作)與Guest OS，而容器打包和部屬的方式與過往不同，容器架構共用一種OS，沒有虛擬機的OS。  那簡單介紹完container後接下來的時間都是實作的部分，以「Windows Server 2019 Datacenter with Containers」建一台VM，這次也是主要是下指令為主，也使用到了Docker工具，這次的主講內容因為是第一次接觸受益良多，學習到新的資訊並且也初步實作建立，雖然打指令的部分還是有些許的跟不上，但由於課堂有錄影所以可以回去自己在試做一次，這次的演講也是相當可貴的經驗。  
021	W11	343	88	  這堂講師是黃講師，上禮拜也有來講課。那這禮拜主要在介紹Microservices – Docker & ACI & AKS容器，是生產部署大量微服務的好工具。他利用以下服務練習各種容器相關操作Azure Virtual Machine 虛擬機執行容器運算  Image: Windows 2019 Datacenter with Containers  Azure Container Registry (ACR)容器註冊服務  Azure Container Instances (ACI)容器部署服務  Azure Web App for Container 容器版網頁程式服務  Azure Kubernetes Service (AKS)容器協調器服務  介紹的蠻透徹的，也希望我都有吸收進去  
024	W11	192	76	  端點存取控制清單 (ACL) 是可供您的 Azure 部署使用的安全性增強功能。 ACL 提供針對虛擬機器端點選擇性允許或拒絕流量的功能。 此封包篩選功能提供了一層額外的安全性。 您可以僅針對端點指定網路 ACL。 您無法針對虛擬網路或是包含在虛擬網路中的特定子網路指定 ACL。 建議您儘可能使用網路安全性群組 (NSG) 來取代 ACL。ACL 是包含規則清單的物件。 當您建立 ACL 並將它套用到虛擬機器端點時，封包篩選會在您 VM 的主機節點上進行。 這表示來自遠端 IP 位址的流量會透過符合 ACL 規則的主機節點進行篩選，而非在您的 VM 上。 這可讓您的 VM 在封包篩選時免於耗費珍貴的 CPU 週期。建立虛擬機器後，預設的 ACL 將準備好封鎖所有傳入流量。 不過，如果所建立的端點使用 (連接埠 3389)，則預設 ACL 會修改成允許該端點的所有輸入流量。 接著會允許來自任何遠端子網路的輸入流量傳輸至該端點，且不需要佈建任何防火牆。 除非建立那些連接埠的端點，否則會封鎖所有其他連接埠則的輸入流量。 預設為允許輸出流量。  
025	W11	283	84	  這次學到了一個新的知識，這次的課程有說到AKS，而AKS 就是提供簡單的部署，管理與操作介面他有幾個特點1.不用擔心升級與修正問題，AKS 提供自動更新與修正。2.AKS 服務具有高可用度與高可靠性。3.AKS 可以透過命令或 UI 簡單的調整擴充。4.AKS 具有自我修復能力。5.AKS 提供 API Server 監控機制。6.AKS 服務的 Azure 託管的管理控制平台，提供免費使用。這讓我在資訊科技知識的方面有更多瞭解了一些。  
026	W11	376	98	  今天黃講師跟我們分享的技術是Azure docker，他跟我們分享Docker是一個基於 Linux Container 的輕量化的虛擬技術，而微軟也相當積極與 Docker 合作，在 Azure 上支援這個正夯的技術，並且提供簡便的方式來建立 Docker Host，他還跟我們分享了ACI這個功能，它可以用來建置Azure Logic Apps，除此之外還有第三個功能Azure Kubernetes Service(AKS)，它可以讓我們輕鬆部署及管理容器化應用程式。黃講師透過一連串的講解把這三個功能很好的在一堂課中解釋給我們聽，將它們化成一個完整的集合。雖然只有2小時但內容非常的豐富，受益匪淺。  
027	W11	233	80	  Docker技術在2013年推出以來，在IT界激起千層浪。Docker是一個提供作業系統層的虛擬化軟體工具，讓應用程式佈署在容器 (Container) 下，堆疊一層容器管理介面的軟體抽象，提供自動化的機制來管理容器。Docker最主要解決了在一台獨立主機上的作業系統層虛擬化，在大量主機結點的叢集環境時常面臨的需求，如容器的佈署排程，工作負載，結點間的網路設計，負載平衡，高可靠性，資源監控與管理介面等。很多工程師了解Docker的好處，但在實際應用時卻難以得心應手。因為目前市面上文件書籍大多見樹不見林，它們解釋了Docker的用法，卻沒有解釋的原理。當工程師使用一個工具卻不了解其原理的時，自然問題不斷。Kubernetes 是一個協助自動化部署、擴張以及管理容器應用程式(containerized applications)的系統。相較於需要手動部署每個容器化應用程式(containers)到每台機器上，Kubernetes 可以1.同時部署多個 containers 到一台機器上，甚至多台機器2.管理各個 container 的狀3.將一台機器上所有的 containers 轉移到另外一台機器上4.提供機器高度擴張性，從一台機器，延展到多台機器共同運行當系統中的微服務越來越多時，管理上也會面臨到很大的挑戰。Kubenetes 的出現讓管理這些微服務程式更加方便。  
028	W11	211	77	  今天的黃講師是在講有關於容器(container)的東西，容器之前上程式設計的時候有提到過，稍微知道概念，之後講師又提到了Docker，但我完全不知道甚麼是Docker，於是乎我自己上網google了一下，Docker是開放原始碼專案，將應用程式自動化部署為可攜式且可自足的容器，在雲端或內部部署上執行。 Docker 也是一家升級及發展這項技術的公司，並且與雲端、Linux 和 Windows 廠商 (包括 Microsoft) 合作。  
029	W11	359	92	  Docker 是目前最流行的一個容器化技術。它創造了一個標準化的 container 製造程序，讓應用程式具有相同的封裝方式、啟動方式、存取方式，不用修改就能在任何支援 Docker 的平臺上執行。過去修過的資安課也有提到Docker，對資安防護也是必須了解的課題。  Dockerfile 是讓 Docker 強大的關鍵之一，Container 在打包的過程，需要的程式和設定資訊都會放在 Dockerfile 中，於是在所有支援 Docker 的環境中執行這個 Dockerfile，就能夠確保建立一模一樣的 Container。  Docker 一個很大的影響是關於 PaaS 平台即服務，因為 IaaS 平臺只要支援 Docker，就可以執行 Container 中的應用程式，不再需要設定 Virtual Machine，因此很容易就可以達成 PaaS 的功能。  
030	W11	376	98	  今天黃講師跟我們分享的技術是Azure docker，他跟我們分享Docker是一個基於 Linux Container 的輕量化的虛擬技術，而微軟也相當積極與 Docker 合作，在 Azure 上支援這個正夯的技術，並且提供簡便的方式來建立 Docker Host，他還跟我們分享了ACI這個功能，它可以用來建置Azure Logic Apps，除此之外還有第三個功能Azure Kubernetes Service(AKS)，它可以讓我們輕鬆部署及管理容器化應用程式。黃講師透過一連串的講解把這三個功能很好的在一堂課中解釋給我們聽，將它們化成一個完整的集合。雖然只有2小時但內容非常的豐富，受益匪淺。  
031	W11	206	77	  這周上課教了關於azure上的Kubernetes運用，介紹了Kubernetes在設計結構上定義了一系列的構建模塊，其目的是為了提供一個可以共同提供部署、維護和擴展應用程式的機制。組成Kubernetes的組件設計概念為鬆耦合和可擴展的，這樣可以使之滿足多種不同的工作負載。可擴展性在很大程度上由Kubernetes API提供，此API主要被作為擴展的內部組件以及Kubernetes上運行的容器來使用。同時也介紹了Microservices的概念，它是以專注於單一責任與功能的小型功能區塊 (Small Building Blocks) 為基礎，利用模組化的方式組合出複雜的大型應用程式，各功能區塊使用與語言無關 (Language- Independent/Language agnostic) 的 API 集相互通訊。  
033	W11	181	74	  今天的講師為我們介紹Docker ，他是一種軟體平台，可以快速地建立、測試和部署應用程式。Docker 將軟體封裝到名為容器的標準化單位，其中包含程式庫、系統工具、程式碼和執行時間等執行軟體所需的所有項目。使用 Docker，可以將應用程式快速地部署到各種環境並加以擴展，而且知道程式碼可以執行。Docker 透過提供執行程式碼的標準方法進行運作。  Docker 是容器的作業系統。與虛擬機器虛擬化伺服器硬體的方法相似，容器可虛擬化伺服器的作業系統。Docker 安裝在每部伺服器上，並提供簡單的命令，使用以建立、啟動或停止容器。  
034	W11	258	82	  今天上課內容對我幫助最大的我認為是(ACI)容器部署服務  因為我們當初專題視作網站，但就是當時還沒認識AZURE，也對部屬的概念不成熟，所以當時網站就沒部屬，今天上課後就可以完成之前專題未能完成的遺願！  How do containers work?    * Containers are basically highly configured processes.    * They leverage kernel features to isolate processes.Cgroups control the resources it can consume. ( cpu ,   memory, blkio , devices, net_prio , etc      * Namespaces control what the process can see. (net, mnt ,pid , user, ipc , etc      * The image format is used to move the root directory theprocess sees around with the container image.  What’s Docker?     The most popular container runtime!   You can start building applications, testing them in local   Docker environments on your computer and deploy the   same exact image to the cloud.  what’s a Dockerfile?   A text file that contains instructions for how to   build a Docker image. It's like a batch script, the   first line states the base image to begin with and   then follow the instructions to install required   programs, copy files and so on, until you get the   working environment you need.  So What’s a Build?   The action of building a container image based on the   information and context provided by its Dockerfile , plus   additional files in the folder where the image is built.  
035	W11	356	92	  ##  **快速交付、輕鬆操作、放心調整 完全受控的 Azure Kubernetes Service (AKS) 可讓您輕鬆部署及管理容器化應用程式。其提供無伺服器 Kubernetes、整合的持續整合與持續傳遞 (CI/CD) 體驗，以及企業級的安全性與治理。在單一平台集結您的開發與營運團隊，好整以暇地快速建置、提供及調整應用程式。**  ## **加速容器化應用程式開發就連最複雜的 Kubernetes 應用程式都能輕鬆定義、部署、偵錯及升級，還能自動將應用程式容器化。使用Dev Spaces，不必模擬相依性即可開發及測試微服務架構的應用程式。利用自動化的例行工作，將完整 CI/CD 管線新增到您的 AKS 叢集，而且只要按幾下就可以設定好 Canary 部署策略。有了深入追蹤部署的能力，就能及早偵測故障並將管線最佳化。您可以透過控制層遙測、記錄彙總及容器健情況了解環境的情況，這些都可在 Azure 入口網站存取，並會自動為 AKS 叢集設定**  ## **建基於企業級、更安全的基礎 只將經過驗證的映像部署到您的私人容器登錄，其隨附內建 Helm Chart 支援，再將該映項自動異地複寫到使用者附近的資料中心。使用虛擬網路及資源之間的原則驅動通訊路徑，協助保護您的 Kubernetes 工作負載。使用 Azure Active Directory，從叢集到容器，取得細微的 Kubernetes 資源身分識別與存取控制。跨多個叢集實行 Azure 原則中定義的規則。追蹤、驗證及重新設定節點、Pod 與容器映像，以符合敏捷做法。使用 Azure 資訊安全中心整合以獲得無可比擬的安全性管理、智慧型威脅偵測和可操作的合規性建議。**  ## ****  
036	W11	165	74	  聽完講師的說明後，我更可以使用完全受控且異地複寫之 OCI 發佈的執行個體，來建置、儲存、保護、掃描、複寫及管理容器映像和成品，使之可以簡化容器生命週期管理。並且能夠以快速且可調整的方式擷取容器工作負載。Azure Container Registry 會將私人 Docker 容器映像以及相關的內容格式，而且對於安全性的整合也具有很大的幫助，他可以確保我們從登錄中提取的內容是在節點上執行的內容。簽署您推送到登錄的容器映像，並設定映像取用者，以在提取時驗證映像完整性。因此我在將來會嘗試使用此產品來存放資料。  
037	W11	118	62	  這次上課覺得，好像這些講座課要實際學都可以開一堂課，雖然教得許多但實際學習到的都是一些皮毛的感覺。容器是一個新的概念，同樣也可以在Azure上做一些操作，與我們原本所想的手機app不一樣，是更大更深更廣的概念，我很好奇他們在公司裡都在做甚麼，才能有這些介紹，雖然也不是很能理解，但也算是讓我有所思考以及收穫。如果可以直接實作某一個介紹的感念並且深入的話，可能會更能了解azure這個雲端服務的目的。  
038	W11	124	64	  本週介紹了containers，在一開始講者介紹了為甚麼要選擇containers?其實現在的科技相當發達，在資訊產業的技術也變得很平易近人，要做同樣的事情都有相當多的管道可以選擇。每周都會介紹不同的東西，那為甚麼我們要選擇這個呢?我想講者提到一個很重要的東西，在不同的環境下我們皆可以使用containers這是一件很重要的，跨平台可能會是未來相當重要的一部分。我覺得講者的投影片相當簡單明瞭，containers顧名思義就是容器，在他的環境底下，我們將所開發的app整理起來分別放入不同的容器的當中，讓我們更方便使用和整理。  
039	W11	316	85	  這週講師介紹的是Azure Docker & ACI & AKS，講師從Containers是甚麼，還有為什麼要有Containers以及它的特性開始介紹，而後也比較了傳統VM跟Containers的差別，覺得講師由淺入深的解說，讓台下的我可以很容易地進入內容。  而聽了講師介紹Docker後，也了解到其優點很多，包括支援 Linux 和 Windows Server 容器、彈性支援微服務和傳統應用程式工作負載、整合式圖形化使用者介面管理和作業、細微的角色型存取控制 (RBAC)，並支援輕量型目錄存取協定 (LDAP) 與 Azure Active Directory 整合以及提供更安全的供應鏈之端對端安全性模型。  另外，Docker與Azure基礎結構深度整合，所以不需要進行其他設定即可取得原生基礎結構功能，也可以安全且方便管理的 Azure 網路和執行個體設定。課堂後半段講師也帶著我們實作，讓我更清楚要如何使用。  
040	W11	363	94	  講座心得   這周的演講邀請到的是黃承皓講師，這兩堂課的內容在講Azure Docker & ACI & AKS，這位講師之前已經有來演講過一次!這次的內容跟上次有明顯的不同，原本完全沒有聽過Docker & ACI & AKS這三樣，今天是第一次接觸到，講師說Docker的實作是把容器做一個標準化的檢驗，容器可以更完整的將成是交給客戶，而ACI是不需要管理虛擬機器而提供容器應用程式執行的服務，而且還能快速的啟動，AKS則是可以提供更簡單的部署, 管理還有操作介面。那這周也有實作的部分，我覺得稍微有點跟不上，因為步驟稍微有點複雜，但是還是有學到比較不一樣的新知，講師也都非常仔細解說!  
041	W11	367	95	  微軟的 Azure Kubernetes Servic 簡稱 AKS , 提供簡單的部署, 管理與操作介面, 具有幾個特點:  不必擔心升級與修正問題, AKS 提供自動更新與修正  具有高可用度與高可靠性  可以透過命令或 UI 簡單的調整擴充  具有自我修復能力  控管叢集的存取安全性      Azure Container Registry (ACR) 是可以用來儲存所有容器部署類型的映像, 使用 Docker Registry 管理與建立 Container Registry, 用以儲存管理私人的 docker container image.   主要提供整合的協調機制來集中管理容器化的應用程式, 包括 Kubernetes, Docker Swarm. 一方面透過 Azure 服務, 可以自動化建置, 執行與擴充應用程式.   可以做為發佈到 ACR 的持續整合的部署流程的一部分  
042	W11	369	96	  這週講的課程是Microservices – Docker & ACI & AKS，主要講的是利用Container來使應用程式現代化，然後介紹了跟Docker有關的東西，像是Dockerfile還有Azure Container Registry以及Azure Container Instance，然後接著也有實作了一連串程式。  我覺得這週的內容比較深入，也比較困難，這週很快就進入了實作的部分，雖然講師每一個步驟都很仔細清楚介紹和解釋，而指令也很清楚的解說這個指令的意思和為什麼這麼做，但是我覺得這週的比起前幾週課程都難的許多。  這禮拜實作的部分，比起之前課程實作對我來說困難了許多，有很多部分不太懂，雖然講師很仔細也很慢一步一步講解帶著做，但是我還是有點不懂，不過今天這堂課學得的東西很多，因為講師很仔細地講解每一段指令程式碼的意義和為什麼，然後也帶著我們做，讓我們知道呈現出來是長怎樣，所以我覺得這週的課程很充實。  
043	W11	370	96	  今天的主題是Azure Docker & ACI & AKS，主要圍繞在”容器”這件事情上，”容器”這個技術是最近這幾年才創通的，然而十幾年前就有在講Container這個概念，不過在Docker出現以前，不是一個很好的實作方式。而Container跟Docker這兩個並不是相等的，Docker的實作是將”容器”做一個標準化的檢驗。甚麼是”容器”技術，”容器”技術雖然與VM 都是虛擬化技術，但與傳統需要安裝作業系統的虛擬化技術不同，容器技術共用底層 OS 的做法，從 OS 層級的虛擬化轉為應用程式層級的虛擬化，這樣的轉變讓原本所需的資源大為降低、執行速度也快上許多。”容器”改變我們甚麼東西，”容器”通常在講做現代化應用程式，主要在於說打包的方式、部屬的方式，都與過去不一樣。  
045	W11	135	66	  這禮拜的講師在一開始稍微講解了container是什麼，然後講了一下container在微軟裡的優勢以及方便之處，然後就帶著我們建立一個server、virtual machine，接著給了我們一段程式碼，要我們依序著打上去，接下來我就不知道發生什麼事了，一個恍神過後，就只能看著隔壁同學操作，直到課程最後，我都無法理解做了什麼，只好摸摸鼻子自認後悔，後悔自己為甚麼要恍神，下次我會多注意自己的精神狀態的。  
046	W11	340	87	  今天講師是教有關於Microservices – Docker & ACI & AKS，這位講師的口氣較平，沒有陰陽頓挫難以讓人持續專心，ppt則是清楚明瞭。這項產品的主要功能主要特點是執行容器而不必管理伺服器在 Azure Container Instances (ACI) 中執行的工作負載，可讓使者專注於應用程式的設計與建置，而不必費心管理執行應用程式的基礎結構，而利用AKI可以建置以下的項目利用 AKS 彈性地迅速增加大量資源: ACI 提供快速且獨立的計算，可應付突然暴增的流量而不需要管理伺服器;事件導向的應用程式與 Azure Logic Apps: 結合 ACI 與 ACI Logic Apps 連接器、Azure 佇列和 Azure Functions，來建置可彈性相應放大隨選容器的強固基礎結構。利用 Azure Container Instances，使用者可執行能夠回應事件的複雜工作;資料處理作業。經過這堂課我更了解了微軟的這項產品。  
048	W11	154	72	  雲端的概念就是，微軟有很多資料中心能夠做處理，在世界各地也都有，雖有些業者會請向使用google，因法律上的緣故，而香港和東南亞的資料中心是台灣地區的首選。延續上次的Azure的課程，並且了解到使用者的情境以及需求，App Services也能在上使用，讓你想使用的model也能在上面做使用，function所需管理的事情減少，以更專注的優勢讓你能做你的事，若達不到預期，也能用靜態加速服務，若有跨職業，也能做設定，諸多功能的使用都帶領我們能更完整的運用它。把機器人遷到網路上，copy iframe，測試程式bot，製作一個聊天機器人，加深azure的運用  
049	W11	362	93	  本周的課程是Microservices – Docker & ACI & AKS。首先講師先從Container開始帶入課程。在架構上，傳統的Virtual Machine以及Container是有差異的。傳統的VM在機房中的機器上面一定會有一層OS層，再往上是Hypervisor層做虛擬化的動作，有了這些後上面才能去跑一個或多個VM。而在Container上，一樣會有Service，上面同樣有OS，但它少了一層Hypervisor就直接市容器了。比起VM少Guest OS，好處是要更新的時候直接對底層的OS做就好了，不用Guest OS一台一台做更新，但壞處是如果底層OS有漏洞容易互相影響。實作上會有兩種方法混用的情況。而Container的方式執行效率可能比較差一點，開機可能會多花點時間，所以還是得使用者自行取捨效能優先還是安全性優先。  這部分的實作課能，因為不熟悉的觀念，所以操作起來比較陌生的感覺，但講師有給予充分的資源也仔細的講解，但得多花一點時間消化。  
050	W11	229	80	               **Azure Virtual Machine 虛擬機執行容器運算**  ## **將基礎結構最佳化，並節省成本**  **相較於隨用隨附定價，透過Azure 保留的虛擬機器執行個體 (RI) 分期定價，可降低高達 72% 的成本。透過 Azure Hybrid Benefit 重複使用內部部署授權在 Azure 上執行 Windows Server VM，並結合 RI 與 Azure Hybrid Benefit 以節省高達 80% 的費用。使用低優先順序或蓄發型 VM，並使用 Azure 成本管理持續降低開銷。移轉至 Azure 時，取得額外三年的 Windows Server 2008 (含 2008 R2) 免費延長安全性更新。**  ## **控管、監視並備份您的 VM 環境**  **使用Azure 藍圖，確保整個企業的合規性，並更快將應用程式部署至生產環境。使用 Azure Advisor 為您的所有 VM 取得高可用性、安全性、效能和成本的建議。使用 Azure 備份來保護資料免於勒索軟體攻擊。使用 Azure 監視器，主動找出問題，並取得智慧見解。**  **採用一致的混合式雲端技術**  **使用 Azure VM 擴充您資料中心的容量，並是需求存取雲端的高效能運算功能。在 Azure 和內部部署環境之間以一致的方式開發、測試、執行和操作混合式雲端應用程式。在 Azure 中開發，並使用 Azure Stack 部署於內部部署環境，以符合 VM 的法規和原則需求。**  
051	W11	153	71	  講師這周在講Container 容器，以及Docker，Docker 是最受歡迎的容器。  Docker 是一個開源專案，提供開發、轉移和執行應用程式。Docker讓應用程式可以獨立於基礎建設中，提高交付的速度。  Docker讓基礎建設的管理更容易，就如同管理應用程式一樣。讓部署、測試程式碼更加便利。  Docker將應用程式獨立於Container當中，省去搭建作業系統的成本，使得程式運行更快速。  基於Container技術，讓建立應用程式更快速與簡單。       為何要選Container ? 因為  1.可以在自己的電腦上使用  2.每一個環境看起來都依樣  3.增加速度  4.可以在  
052	W11	242	81	  containers run everywhere: linux windows cloud drones Raspberry PI loT  modernizing your application with containers  Modernization with containers!A new way to package, version and manage software releases.  So what’s a container?  •Clear boundaries for your applications, allowing you to know which assets belong to which application and who owns it.  •No more leftover cruft from previous installations or versions  How do containers work?  •Containers are basically highly configured processes.  •They leverage kernel features to isolate processes.•Cgroupscontrol the resources it can consume. (cpu, memory, blkio, devices, net_prio, etc)  •Namespaces control what the process can see. (net, mnt, pid, user, ipc, etc)  •The image format is used to move the root directory the process sees around with the container image.  .•Provides resource isolation, without the overhead of more VMs.  •Better resource utilization.•Repeatable builds  
053	W11	364	94	  **這次介紹的內容是Azure Container，他主要有以下的幾個優點：**  **執行容器而不必管理伺服器：** 可專注於應用程式的設計與建置，而不必費心管理執行應用程式的基礎結構。  **利用隨選容器增加彈性：** 以極為簡易且快速的方式將容器部署到雲端 - 只須單一命令。在有需要時，隨時都能使用 ACI 為需求大的工作負載佈建額外計算。當流量暴增時，可搭配 Virtual Kubelet 使用 ACI，從 Azure Kubernetes Services (AKS) 叢集彈性地迅速增加大量資源。  **利用 Hypervisor 隔離來保護應用程式：** 為容器工作負載的虛擬機器提高安全性，而不犧牲輕量型容器的效率。ACI 為各個容器群組提供 Hypervisor 隔離，以確保容器獨立執行而不會共用核心。  Azure Container能管理使用者暴增的流量，藉由AKS自動化處理，平衡容量工作的容量，若是不夠時，再放大ACI中的其他Pod而非管理額外的伺服器，同時也有事件導向應用，彈性地尋找適合的容器，來處理較為複雜的任務，以 ACI 取代靜態佈建的虛擬機器來處理資料，能節省過多的花費。  
054	W11	276	84	  今天的講師是上次介紹Azure DevOps 的講師，但主題不一樣，這次是介紹Azure Docker&ACI&AKS，首先Docker是一個open- source的專案，能輕鬆快速地將應用程式移轉到 Azure，以提高安全性及現代化應用程式服務。在 Azure 上部署 Docker，就能以企業級安全性、支援和規模，來執行現代化和傳統 Linux 或 Windows 應用程式。Docker有很多優點，像是支援 Linux 和 Windows Server 容器、彈性支援微服務和傳統應用程式工作負載、整合式圖形化使用者介面管理和作業、細微的角色型存取控制 (RBAC)，並支援輕量型目錄存取協定 (LDAP) 與 Azure Active Directory 整合、提供更安全的供應鏈之端對端安全性模型。  
055	W11	94	61	               今天是由黃講師來為我們講解Docker、ACI以及AKS是什麼和如何運作，我以Docker作解釋，雲端時代的來臨，意味著我們不再需要追求高效能的家用主機，而傾向把複雜運算丟給雲端來處理，數據雲端化的趨勢，也加速雲端伺服器開發的需求。想像若一個開發者，在Amazon申請了AWS雲端服務，然後以LAMP建置其網路平台，即使是一個熟練的工程師，仍需花費不少時間在系統安裝與設定，才能讓手邊的原始碼在網路上執行。而當客戶需求改變時，有可能又要花時間將系統從AWS搬到微軟的Azure平台，這表示工程師又要花時間處理煩瑣的問題，以上這是今天我後來去探索的內容。  
056	W11	149	69	  經過了這週講師精彩且不會讓我們同學感到太困難及深奧的演講之後，我對於這週的課程又有了更深一層的認知，並且通過這周的學習之後，我對於我未來要工作的方向又有了可能更多的一些想法，不光光是過去我們在課程中學習到的部分，還是有很多不同的題材值得我們同學做更深一層的學習以及研究，並且也讓我們對於畢業後的未來有更多的嘗試想法以及看法，我認為這都是很好的一次課堂經驗，也要謝謝講師這次精彩的演講！  
057	W11	153	71	  這週請來的黃講師很厲害，他講的東西是Azure Docker，我覺得收穫很多，雖然說我對這方面還不是很熟悉，很多地方也聽不太懂，看著這麼多的程式碼其實有點吃力，但我覺得把這些東西學起來，然後變成自己腦袋裡的東西，成為自己以後的武器應該很不錯，準備畢業了，也應該多把握在學校的最後這一年把一些知識跟技術留下來，這樣之後出去找工作應該也會比較有競爭力，增加自己的硬實力才不會在競爭的環境下被淘汰。所以這週的課程雖然很多地方都聽不懂，但應該會多多去研究一下關於Azure Docker這東西。  
058	W11	373	97	  本周的上課內容講解了有關Microservices – Docker & ACI & AKS，如果您的應用表單的頂端表單的底部程式是以微服務為基礎或分散於多個容器，您就必須為適用於生產環境的應用程式使用協調器。以微服務為基礎的方法中，每個微服務都擁有自己的模型和資料，因此從開發和部署的角度來看，它是非常自主的。 即使您擁有的是由多個服務組成的傳統應用程式 (例如 SOA)，您也會使用多個容器或服務來組成單一商務應用程式，而這些項目都必須部署為分散式系統。 向外延展和管理這類系統非常的複雜；因此，如果您想要擁有一個適用於生產環境且可延展的多容器應用程式，就一定要使用協調器。  
059	W11	84	60	  今天的講師是黃講師，他要交我們的是Azure docker，這又是我從來沒聽過的東西了，這學期的課程下來，說實在的我記住的東西沒有多少，大概也就一兩堂課的內容吧，Azure的知識實在是太多太廣了，每週講師雖然都是交不同的東西，但一週也就兩個小時的時間，每個內容只能講一些最基本的，不過光是這些最基本的就有得我受了，這週的黃講師也講得很好，內容很豐富，剩下得課程已經不多了，但我還看不到Azure的盡頭，希望在這課程結束之後，我能夠自發地去學習更多Azure的東西。  
060	W11	375	97	  這周的演講是講Azure Docker & ACI & AKS的黃承皓講師，那我對這位講師有印象因為之前有來演講過一次!原本完全沒有聽過Docker & ACI & AKS這三樣，今天是第一次接觸到，講師說Docker的實作是把容器做一個標準化的檢驗，容器可以更完整的將成是交給客戶，而ACI是不需要管理虛擬機器而提供容器應用程式執行的服務，而且還能快速的啟動，AKS則是可以提供更簡單的部署, 管理還有操作介面。那這周也有實作的部分，我覺得稍微有點跟不上，因為步驟稍微有點複雜，但是還是有學到比較不一樣的新知，講師也都非常仔細解說!  
062	W11	120	63	  在演講的過程中，演講者以自身的例子和我們分享其生涯經驗，並提出對於在學學生在規劃自己生涯時的建議與見解。  在知識的產出方面，演講者強調要培養閱讀的習慣，多閱讀書籍，除了從書中獲得知識、增廣見聞外，還需有思考、反省的能力，能提出自己的見解與想法，吸收內化所閱讀到的東西。此外，報告不應該只是抄襲或複製，而要將讀到的東西，經由理解與思考而成為自己的。  面對現今多元競爭的社會，不要只狹隘的侷限在現在所學的範圍，而應該朝向多元發展，培養多元的專長和能力，只擁有一項專長是不夠的。而演講者也以自身經驗分享其在求學的不同階段中擴展自己的專長與領域。而這個部分也是值得我們在面對生涯的抉擇時可加以思考和借鏡的。  此外，對於升學考試與留學的準備方面，也提供給我們一些實際的經驗與實用的資訊，例如：在留學方面需考慮各國的學制、生活費等，且需多搜集相關資訊。更提供了我們一些學好英文的方法。  對於現今教職和教師甄試的激烈競爭，演講者建議我們除了要培養自己多元的專長與實力，面對工作的選擇不要只限制在考上教甄，可往其他相關的領域發展，如私人企業之課輔教師等。  總之，雖然這次演講的主題主要是針對大學生，但藉由聽講的過程中，也幫助我再次反思自己在各個階段的生涯抉擇，及對現在和未來的期望。也期許自己能培養多元的專長與能力，以面對未來的挑戰。  
063	W11	131	65	  這周的講師演講的題目比較實作向，是在介紹docker的實作，從上課的一開始就直接進入實地演練邊做邊講，一開始簡單的部分還勉強跟得上，但到後面越來越難的部分，操作偶爾會不小心出錯，不知道哪裡出問題，課堂後段的部分只好看著旁邊同學跟講師操作，我覺得感覺好像資館的人員做這些事情是基本的知識，而我卻一點都不了解，頗擔心出社會工作後找不找得到工作或是沒有競爭力等等，尤其是期末的報告迫在眉睫，令我有一點點擔心，雖然不一定要使用這周教的當作報告題目，讓我稍嫌欣慰。  
064	W11	326	86	  這禮拜的主題是Microservices – Docker & ACI & AKS，其中我最不了解的就是AKS的部分，AKS-Azure Kubernetes Service，可以視為是一個容器，可以讓我們輕鬆的部屬及管理我們的應用程式，微軟所提供無伺服器Kubernetes，以及完整整合與持續傳遞(CI/CD)體驗。這當然少不了企業級的安全性與治理，這些完整的服務好讓我們能在單一的平台輕鬆的建置及調整應用程式，微軟也提供了自動化的服務，讓我們可以將完整CI/CD管線新增到我的AKS叢集，而且這在設定的方式非常簡單，我也可以透過控制層遙測、記錄彙總及容器健康情況了解環境的情況，這些都可在 Azure 入口網站存取，並會自動為 AKS 叢集設定，透過這些介紹能讓我對AKS有更深一層的認識。  
065	W11	353	91	  這次的上課內容是在介紹 Docker & ACI & AKS，講師是之前有來介紹過Azure DevOps的黃承皓講師。   Docker是一種開放原始碼專案，它將應用程式自動化部署為可攜式且可自足的容器，並在雲端或內部部署上執行。在Azure上的外部服務提供者或雲端中，Docker容器可以在任何位置執行。   ACI是容器執行個體，在ACI執行工作，可以不用留心管理伺服器，能讓我們專注在應用程式的設計上。   AKS則是提供簡單的部署、管理與操作介面，只要使用AKS配合Azure的各種服務，像是Azure DevOps Project, ACR, ACI, Azure Monitor等等會提供從開發環境到生產環境的DevOps完整方案。   這次上課內容有運用到許多程式和技術，在學習上又更困難了。  
066	W11	320	86	  這禮拜主要講的是 Container 與傳統 VM 的不同，以前 programmer 若要在 VM 上執行多個應用程式，必須很麻煩的對每個應用程式架設環境，當任何一台 Host 要執行此應用程式時，就可以在 VM 中先下載裝有此應用程式所需一切資源的 OS，模擬出一個熟悉的空間給此應用程式，這樣就能確保應用程式的順利執行。而 Container 不需要安裝OS就能執行應用程式，因為所有 Container 共用 Host OS，並建立資源控管機制來分配 Host OS 上的系統資源，因此省去了執行 Guest OS 的時間與心力，而能夠同時做到每個 Container 互相獨立，比起傳統 VM，Container 的執行速度快、儲存空間小、資源也更有效運用。  Docker是一個讓 Container 標準化的工具，也是目前最流行的一個容器化技術。我認為Docker 最厲害的是，只要 IaaS 平臺支援 Docker，就可以執行 Container 中的應用程式，不再需要設定 VM，因此很容易就可以達成 PaaS 的功能。  
067	W11	135	67	  今天使用了Azure的AKS、ACI等容器進行操作，這些都是生產部署大量服務的工具之一，其中(Azure Kubernetes Service)AKS可以輕鬆部署及管理容器化應用程式，也能夠持續的整合與傳遞；而(Azure Container Instances)ACI可以讓使用者專注於應用程式的設計和建置，不需要花心思管理執行應用程式的基礎結構，使用者在設計上能夠更加快速方便。而在課堂中使用這些容器操作與練習一些服務，像是虛擬機執行容器的運算、容器註冊的服務、容器版網頁程式的服務等，並且告訴我們一些在連結上可以使用的指令。  
068	W11	372	96	  這周的演講內容是Microservices – Docker & ACI & AKS，Docker 是最受歡迎的運行容器，可以構建應用程式，在電腦上的本地 Docker 環境中對其進行測試，然後將相同的精確映像部署到雲中，有關如何構建 Docker 映像的說明的文本文件，像批處理腳本一樣，第一行指出了基礎映像的開頭，然後按照說明安裝必需的程序，複製文件等，直到獲得所需的工作環境為止。  Azure Container Instance (ACI) 按需容器每秒計費，並與其他Azure服務集成，無需預配VM或群集且管理程序級別隔離，ACI擁有公共IP、永久存儲並支持Linux和Windows容器。  Azure Kubernetes Service (AKS) 管理託管的Kubernetes環境，無需容器編排專業知識即可輕鬆快捷地部署和管理容器化的應用程序。通過按需配置，升級和擴展資源，還消除了正在進行的操作和維護的負擔，而無需使應用程序脫機。  
069	W11	137	67	  這週的內容是AKS、ACR、ACI。AKS能夠提供自動更新、修正問題及自我修復。ACR能夠儲存容器部屬類型的映象，集中管理容器化的應用程式，並可以自動化建置、執行與擴充應用程式。ACI提供容器應用程式執行的服務，能夠快速啟動，並提供公用 IP 以及完整網域名稱，且具有應用程式相依性隔離和資源控管。這三種服務使作業更加方便操作，也能夠漸少花費的時間成本。  
070	W11	192	76	  今天主要是在講容器的技術，也就是Container的概念，雖然現今大家常把，Container跟Docker放在一起，但Container不等於Docker。而容器最主要在現今的技術主要是負責打包、部屬。其實容器(container) 技術雖然與傳統虛擬化(Virtual Machine) 都是虛擬化技術，但與傳統需要需要安裝作業系統的虛擬化技術不同，容器(container) 技術共用底層 OS 的做法，從 OS 層級的虛擬化轉為應用程式層級的虛擬化，這樣的轉變讓原本所需的資源大為降低、執行速度也快上許多。今天的課程讓我對於容器這個部分更理解了許多，相信會對未來更有幫助。  
071	W11	219	78	  以下為Azure虛擬機器各系列的簡單介紹，相信如果能熟練地運用這些好用的工具，一定可以達到事半功倍的效果：  A 系列  適用於開發/測試的初階實惠 VM  Bs 系列  經濟蓄發型 VM  D 系列  一般目的計算  DC 系列  保護使用中的資料  E 系列  在記憶體內部超高執行緒的應用程式最能有效執行  F 系列  計算最佳化的虛擬機器  G 系列  記憶體及儲存體最佳化的虛擬機器  H 系列  高效能運算虛擬機器  Ls 系列  儲存體最佳化的虛擬機器  M 系列  Memory optimized virtual machines  Mv2系列  Largest memory optimized virtual machines  N 系列  啟用 GPU 的虛擬機器  
073	W11	127	64	  在2019年11月19日第八節下午3:00至第九節下午5:00的企業雲端應用趨勢與實務課程，感謝魏教授系主任，可以邀請到這麼優秀的講師來為我們講解這堂如何應用Microsoft的雲端平台Azure真正在企業有哪些部份會去做使用，也讓我們清楚了解到學歷在業界上是多麼的重要，而這樣連續好幾次聽到這位講師在介紹Azure是更能讓我有著連貫性，而不像以往每個講師個別講述自己的上課內容，也因為這樣的連貫性上課讓我清楚了解到Azure原來還可以達到如此運用的境界，真的是令我嘆為觀止阿!  
074	W11	362	94	  這週的主題是Azure Docker & ACI & AKS，Docker的實作是把容器做了標準化的介面，而容器可以改善你把程式打包到其他地方時卻出錯的問題，它可以去降低發生這種情況的風險，且它在執行的可移動性上是很好的，效率也能增加很多。容器可以在很多地方run，像是Linux、Windowsc、cloud或裝置上等等。這週實作的部分佔蠻多的，操作的步驟也比較多，雖然講師講解得很仔細，幾乎是一步一步帶我們做，但對於第一次做的人來說還是有點難度的。我相信只要多熟悉這樣的操作或是應用，在未來一定能有很好的發展空間。  
075	W11	191	75	  這周講師是講關於Docker & ACI & AKS，我覺得內容有些困難，因為是有關微服務和Container的技術，之前從來沒有聽過和接觸過的關係，不過講師還是非常認真地講解，我覺得這堂課非常有意義，因為它讓我在上完課之後還願意花其他時間去了解。:)  
076	W11	99	61	  這周的內容是docker!!!  在做專題的時候，學長就有問過我有沒有在使用這東西，所以對docker有點興趣，沒想到有機會在azure課程遇到  這次講師完全不廢話，直接進入課程重點，直接操作給我們看  一開始還跟的上，到後面不小心執行exit，重新進入cmd之後，cmd就無法辨認docker指令了……  不知道哪裡出問題，之後的操作只能看講師執行，弄到最後，老師透過docker開了一個網頁並且可以管裡網頁，我覺得有點厲害  感覺docker還能做很多其他事情，再找時間研究  準備要繳交期末作品，有點煩惱！  
077	W11	127	65	  這個禮拜是11月中旬了，距離期末報告的時間愈來愈近，我與我的組員們也在慢慢地構思期末報告的主題，我也專注地記錄著這幾個禮拜講師們所講的主題，而在這個禮拜的講師，是微軟的黃承皓黃講師，黃講師告訴我們許多有關微軟的服務，事實上，每個禮拜的講師都是在講微軟所提供給大眾的各項服務，而黃講師主要教我們去利用各項服務練習各種容器(Container)的相關操作，像什麼容器協調服務(AKS)阿等等的，平時對這些比較沒什麼接觸的我，在一開始有點不知道上課在上什麼、講師到底在講什麼，所幸我的同學們都很熱心地幫助我。  
078	W11	218	78	  Azure Container Registry 會將私人 Docker 容器映像以及相關的內容格式，而且對於安全性的整合也具有很大的幫助，他可以確保我們從登錄中提取的內容是在節點上執行的內容。簽署您推送到登錄的容器映像，並設定映像取用者，以在提取時驗證映像完整性。聽完講師的說明後，我更可以使用完全受控且異地複寫之 。OCI 發佈的執行個體，來建置、儲存、保護、掃描、複寫及管理容器映像和成品，使之可以簡化容器生命週期管理。並且能夠以快速且可調整的方式擷取容器工作負載。因此我在將來會嘗試使用此產品來存放資料。  
079	W11	359	93	  這次講的是Azure Docker和Azure Container Instances (ACI)和Azure Kubernetes Service (AKS) 。  在 Azure 上部署 Docker，就能以企業級安全性、支援和規模，來執行現代化和傳統 Linux 或 Windows 應用程式。針對 Docker 容器中的傳統和雲端應用程式，採用統一的作業模型和安全的供應鏈，以降低作業成本並提高效率。  Docker優點包括：支援 Linux 和 Windows Server 容器。彈性支援微服務和傳統應用程式工作負載。整合式圖形化使用者介面管理和作業。細微的角色型存取控制 (RBAC)，並支援輕量型目錄存取協定 (LDAP) 與 Azure Active Directory 整合。提供更安全的供應鏈之端對端安全性模型。  ACI 提供快速且獨立的計算，可應付突然暴增的流量而不需要管理伺服器。舉例來說，Azure Kubernetes Service (AKS) 可使用 Virtual Kubelet，在 ACI 中佈建可於數秒間啟動的 Pod。這使得 AKS 能以足夠容量為您的平均工作負載執行。當您 AKS 叢集的容量不足時，可相應放大 ACI 中的其他 Pod 而無須管理額外的伺服器。  使用 Azure Container Instances，在來源資料所內嵌、處理及放置的長期存放庫 (例如 Azure Blob 儲存體) 中進行資料處理。以 ACI 取代靜態佈建的虛擬機器來處理資料，可透過每秒計費來省下巨額成本。  AKS可以管理裝載 Kubernetes 的環境；因此，不需具備容器協調流程專業知識，就能快速、輕鬆地部署及管理容器化應用程式。 也可透過佈建、升級與依需求調整資源，以無需讓應用程式離線的方式來消除進行中作業及維護之間的界線。  後半堂課進行實作，這次的演講有多專有名詞，跟著老師的演講，也上網查了很多資料。這次的演講學到很多東西，也對於實際操作有更深的理解。  
080	W11	147	69	  這週邀請來的講師是微軟的黃承皓講師 Thomas Huang，老師是第3次蒞臨，每次帶來的實作課程都很扎實，這次教的是近年在業界很受歡迎的Container，雖然概念有點抽象不太好懂，但與傳統虛擬機器VM的差異就是，Container不需另外安裝作業系統，所有Container共用Host的作業系統，且透過資源的分配，Container一樣能獨立運行，執行速度更快、資源更有效的應用，上完這堂課收穫很多。  
081	W11	168	74	  今天的課程內容----- docker是個在業界目前很常用的工具，而我們可以有此機會聽到裡面的原理，理解現下技術發展，包括容器等概念，是很幸運的。前面提到了基本docker與vm的差異在是否具有hypervisor，而有無使用共同的kernel也各有利弊，若有共用的狀況下，有可能遭受惡意程式時會整個毀損，並且container與kernel需一致。接著講師就帶領實做，在專業的說明下，更能進入狀況去理解其背後的內容與操作的流程，如container下與系統下是不同的環境與資料，還有如何開啟機器、查看現有的image等。整堂課下來，感謝講師仔細精闢的解說，包括基本概念與程式碼指令中代表的意義，而且還有隨堂操作筆記的補充，使我們得以了解如此現金流行實務技術、內容與用途，如git、kubernetes，並且能重新回顧如何開啟docker、container instance、web app等，相信在更深入研究以後，會對未來職涯發展具備一定的加分效果。  
082	W11	193	76	  今天演講的的內容是Docker & ACI & AKS，container容器，容器這項技術是這幾年才竄紅。Docker的實作是把容器做一個標準化，所以與容器不太相同，容器是用來做現代化的應用程式，現代化的差別在於打包與部屬的方式與過去不同，應用程式可以從一個環境快速可靠地運行到另一個環境，容器將軟體與其環境隔離開來，並確保儘管開發過程和程式上線之間存在差異，軟體仍可以順利運行，是一項非常方便且利於開發者與使用者的應用，且在容器中的應用程式也會很安全。  
083	W11	366	95	  這次的講師課程是在講解Docker，而Docker是是一個 Linux Container 的輕量化的虛擬技術，  在 Azure 上也提供簡單的方式去建立 Docker Host，而 Docker 是一個 open-source 的專案，主要的特點是能將應用程式包裝在一個 Linux Container 中，雖然我覺得這次講師講的東西對我有一點吃力，但我還是很努力的去想學會，問了同學後，原來這些應用被包裝進容器後，能夠更簡單地去部屬跟遷移，與過去傳統的虛擬化技術相比，舊式的虛擬模擬器需要安裝作業系統後才能執行應用程式，那Container 則不需要安裝作業系統就能執行應用程式。Container 技術是一種在 OS 內的 Kernel層所打造虛擬執行環境，所以 Container 彼此之間共用了 Host OS Kernel，但透過namespace的區分來達到隔離每個容器的目的。  
084	W11	288	84	  微服務 (Microservices) 是一種軟體架構風格，它是以專注於單一責任與功能的小型功能區塊 (Small Building Blocks) 為基礎，利用模組化的方式組合出複雜的大型應用程式，各功能區塊使用與語言無關 (Language-Independent/Language agnostic) 的 API 集相互通訊。  這次老師教的實作有Docker 和 ACI 和 AKS，有使用這個服務的有常見的Amazon、Google、Netflix等，微服務是一種以業務功能為主的服務設計概念，每一個服務都具有自主運行的業務功能，對外開放不受語言限制的 API (最常用的是 HTTP)，應用程式則是由一個或多個微服務組成。  雖然使用一般的伺服器虛擬化技術就能應用於微服務的管理，但容器技術 (Container Technology) 如 Docker 會更加地適合發展微服務的運算資源管理技術。  
085	W11	356	92	               這週著重在Microservices – Docker & ACI & AKS，容器是生產部署大量微服務的好工具。包含How do containers work?裡面的Virtual Machine還有Container，這週的介紹也是新的東西，裡面也包含很多需要實際去coding和動手操作的地方，認識很多新的區塊，講師講的也很清楚，但是隨著內容的困難度增加，要跟上速度也越來越不容易。在Architecture的各種分析，還有不同層級下的應用模式，最後是將docker和azure做結合，做doctor的介紹，還有如何Create Windows Server with Container，微軟在這方面提通很多相關資源，從演講在提供很多機會讓學生做學習和應用。  
086	W11	156	72	  這次邀請到了黃承皓講師，此次的內容是在講有關於container的東西，之後是提到了Azure Docker，那Docker呢是個open-source 的專案，主要的特點是能將應用程式包裝在一個容器中，當這些應用被包裝進容器後，部署、遷移都變得更為簡單。  依然感謝講師與教授，這次的內容我覺得偏難，需要花點時間去琢磨。  
087	W11	305	85	  這次上課的內容主要是容器Container，主要是利用如下服務練習各種容器相關操作 :  1.Azure Virtual Machine 虛擬機執行容器運算  Image:Windows 2019 Datacenter with Containers  2.Azure Container Registry (ACR)容器註冊服務  3.Azure Container Instances (ACI)容器部署服務  4.Azure Web App for Container 容器版網頁程式服務  5.Azure Kubernetes Service (AKS)容器協調器服務  而課程的一開始，講師也對Container做了基本的介紹，像是Container的用途、為什麼要用Container、Container用在哪些地方、還有Container是如何運作。而在基本的介紹過後，講師也實際帶我們操作，講師一步一步的帶領讓我們都能跟得上，也會隨時注意我們有沒有問題，真的是受益良多。  
088	W11	321	86	  今天黃講師所講授的主題是: Microservices –的Docker & ACI & AKS。Azure Kubernetes Service (AKS) 上的微服務架構很有趣，AKS 是一項 Azure 服務，用來部署受控的 Kubernetes 叢集。Kubernetes 叢集。 AKS 負責部署 Kubernetes 叢集及管理 Kubernetes 主機。使用 Kubernetes Service 物件為 Kubernetes 中的微服務建立模型是最自然的方式。 微服務是鬆散耦合且可獨立部署的程式碼單元。 微服務通常會透過定義完善的 API 進行通訊，並且可透過某種形式的服務探索來加以探索。 Kubernetes Service 物件會提供一組符合這些需求的功能：  IP 位址。 Service 物件會為 Pod (ReplicaSet) 群組提供靜態內部 IP 位址。 建立或移動 Pod 時，一律可在此內部 IP 位址上連線到服務。負載平衡。 傳送至服務 IP 位址的流量會負載平衡到 Pod。服務探索。 Kubernetes DNS 服務會指派內部 DNS 項目給服務。 這表示 API 閘道可以使用 DNS 名稱呼叫後端服務。 服務對服務通訊可以使用相同的機制。 DNS 項目會依據命名空間來組織，因此，如果您的命名空間對應至限界內容，則服務的 DNS 名稱自然會對應至應用程式定義域。  
089	W11	152	70	   **在這節課當中我們了解到了有關於伺服器 容器相關的知識，像是容器註冊服務或是容器部署服務等等。由別於一直以來上課的老師，往往按著課本照本宣科，隨然看似有組織架構的感覺，但卻沒有比這樣由多元的上學習來的有效，在這堂課中，讓我覺得受益良多，甚至使得我在課程之後還會想要回家去稍為的研究有關於伺服器 容器相關的知識，我們都知道未來有關伺服器人工智慧相關的能力對我們這個科系勢必是必備的能力，也希望在這堂課中學習的一切能夠在未來的工作上用到!**  
090	W11	267	82	  今天微軟講師教授是企業透過容器，逐漸實現成本節約、解決部署問題，以及改善 DevOps 和生產環境作業。 Microsoft 藉由建立 Azure Kubernetes Service 和 Azure Service Fabric 等產品，以及藉由與 Docker、Mesosphere 和 Kubernetes 等業界領導者合作，不斷為 Windows 和 Linux 創新容器。 這些產品提供容器解決方案，可協助公司以雲端速度和規模建置及部署應用程式，而不論其選擇的平台或工具為何。  Docker 成為容器產業的既定標準，並受到 Windows 和 Linux 生態系統中最重要廠商的支援 （Microsoft 是支援 Docker 的主要雲端廠商之一）。在未來，Docker 可能會在雲端或內部部署的任何資料中心內普及。  此外，微軟架構已躍升為分散式關鍵任務應用程式的重要方法。 在微服務架構中，應用程式會建置在一組可獨立開發、測試、部署及設定版本的服務之上。  
091	W11	330	87	  今天請到的是黃講師來演說，主要的題目是Azure Docker， 首先講師有大概提到流程，容器也很詳細的介紹，什麼是容器，為何它如此重要，應用在哪些東西上，可以使用在各個介面，像是linux還是windows等等。VM跟容器的比較、差別，也是有不同。  在 Azure 上部署 Docker，您就能以企業級安全性、支援和規模，來執行現代化和傳統 Linux 或 Windows 應用程式。針對 Docker 容器中的傳統和雲端應用程式，採用統一的作業模型和安全的供應鏈，以降低作業成本並提高效率。  ## Docker 優點    * 支援 Linux 和 Windows Server 容器。   * 彈性支援微服務和傳統應用程式工作負載。   * 整合式圖形化使用者介面管理和作業。   * 細微的角色型存取控制 (RBAC)，並支援輕量型目錄存取協定 (LDAP) 與 Azure Active Directory 整合。   * 提供更安全的供應鏈之端對端安全性模型。  心得: 講師後面都很詳細的帶著我們一步一步操作，並且讓我更了解Azure Docker這個功能，如何再雲端上創造一個容器加以運用，並使用在我們的電腦，在未來不管是職場還是教育上，都是很可以學以致用的，收穫許多。  
092	W11	344	88	  Docker 是一個 open-source 的專案，主要的特點是能將應用程式包裝在一個 LXC (Linux Container) 容器中，當這些應用被包裝進容器後，部署、遷移都變得更為簡單。與傳統的虛擬化技術相比，虛擬機器需要安裝作業系統才能執行應用程式，而 Container 則不需要安裝作業系統就能執行應用程式。Container 技術是一種在 OS 內的 Kernel 層所打造虛擬執行環境，所以 Container 彼此之間共用了 Host OS 的 Kernel，但透過 namespace 區分來達到隔離每個容器的目的。  Azure 容器執行個體 Azure Container Instance (ACI), 是不需要管理虛擬機器而提供容器應用程式執行的服務, 具有快速啟動的優點, 並且提供公用 IP 以及完整網域名稱 (FQDN), 可以直接由網際網路存取應用程式. 此外 ACI 具有應用程式相依性隔離和資源控管, 等同於虛擬機器的安全性管理.  
093	W11	224	79	  從這門課一開始，很多講師都有提到Docker，但一開始還不太清楚他的概念，聽了講師介紹有更理解了一些，容器化是一種軟體開發方法，在此方法中，應用程式或服務、其相依性及其組態 (抽象化為部署資訊清單檔) 會封裝在一起，成為一個容器映像。容器化應用程式可以當作一個單位來測試，並以容器映像執行個體形式部署至主機作業系統 (OS)。容器也可讓不同的應用程式在共用 OS 上彼此隔離。容器化應用程式會在容器主機上執行，再於 OS (Linux 或 Windows) 上執行。因此，容器所需空間明顯小於虛擬機器 (VM) 映像。不過在實作的時候有稍微沒跟上講師，回去可以再跟著影片自己做一次。  
094	W11	142	68	  今天上課講師講很多東西，所以沒怎麼實作。主要學到了一個新的東西是Kubernetes，是一個google開發並開源的系統，專門用以自動化部屬、彈性擴充及容器應用管理，而且提到kubernetes之前還會需要認識另一個名詞就是docker。再來說甚麼是docker呢?他是一個開源專案，目標是實作輕量級的作業系統虛擬化解決方案。kubernetes和docker的基本差異是k8s是在整個叢集內執行，而docker則是在單節點上執行，不過這兩者很適合搭配來使用，使用docker建置並執行容器，以及儲存並共用容器映像。使用者在kubernetes叢集上執行docker組件。  
095	W11	99	62	  容器化是一種軟體開發方法，在此方法中，應用程式或服務、其相依性及其組態會封裝在一起，成為一個容器映像。容器化應用程式可以當作一個單位來測試，並以容器映像執行個體形式部署至主機作業系統 (OS)。軟體容器是軟體部署的標準單位，可包含不同的程式碼和相依性。以此方式容器化軟體可讓開發人員和 IT 專業人員只需要一點修改或不需要任何修改，就能跨環境進行部署。 簡單來說，容器在整個應用程式生命週期工作流程中，提供隔離、可攜性、彈性、延展性和控制能力等優點。最重要的優點是可為開發與作業提供環境的隔離。  
096	W11	153	72	  這個禮拜的演講的主題式容器的技術，也就是Contain的概念，現今大家常把Container跟Docker放在一起，但是Contain不等於Docker。而容器最主要在現今的技術主要是負責打包、部屬。其實Contain技術雖然與傳統虛擬化都是虛擬化技術，但與傳統需要安裝作業系統的虛擬化技術不同，Contain技術更用底層OS的作法，從OS層級的虛擬化轉為應用程式層級的虛擬化，這樣的轉變讓原本所需的資源大為降低、執行速度也快上許多。今天的課程讓我對於Contain這個部分理解了更多，相信未來也會有應用到的時候。  
097	W11	84	60	  今天的講師是黃承皓老師，從一些小細節可以得知，老師在課前的準備可以說是相當充足的。舉例來說，老師在課程的一開始有給我們一個文字檔，裡面存放的是一些指令，提供我們待會的課程在實作時可以複製貼上使用，使的我們可以更容易跟上老師的課程節奏。  而課程首先介紹的是Container，雖然Container的概念早在10幾年前就已經被提出，但一直到Docker的推出，Container才變成一個比較好的實作方式。但要注意的是Docker並不等於Container，而是一個把Container標準化的介面而已。  真的很感謝黃老師的用心，老師講課的節奏與帶給我們的資訊真的都非常詳細且實用。  
098	W11	146	68	  今天是黃承皓講師，首先他介紹了Container是什麼，與傳統的Virtual Machine不同處。接著介紹Docker和它的建置架構，並提醒Container的作法並不代表就一定是Docker，最後就是實作怎麼在Window Server上建置Docker。在建置Docker時，先介紹Dockerfile，透過Dockerfile告訴Docker我們要執行的東西，接著就是實際的建置，並且使用Docker image。其實之前在實習的公司就有在建置Docker，而那時候也有參與一起討論，但因為當時才未接觸過，所以光了解Docker的概念就花了一段很長的時間，但經過今天這堂課的講解跟實際演練後，我對Docker有更鞏固的概念了。  
099	W11	383	99	  今天老师讲了有关 Azure Docker & ACI & AKS 的知识，非常的新颖与有意思。  首先老师给我们讲述了containers 的无处不在，包括Linux，windows，等等。 通过virtual machine 与container结合，产生了一个有关container的应用。接着，老师通过Azure像我们展示了如何利用Azure的平台，在其上面建立一个有关application的container， 在经历过许多的参数设置，就可以成功的create 一个非常快捷与便利的containers，让许多数据可以在其中保存.并且给人进行再者的分析！  
101	W11	184	75	  今天講師要為我們講解的主題是容器(Container)。為什麼要用容器?因為你需要   在機器上工作，這個容器可移動性是非常好的，它可以在所有環境上都可以使   用，它也可以讓你的機器增加工作速度，同時可以在電腦上，也可以在雲端上   面跑，也可以放在工業上的機器，無人機等也可以跑。   容器與虛擬機器的分別是，虛擬機器都需要有Hypervisor層才能讓虛擬機器運作   ，容器則可以免去這一層，好處就是要做更新的時候，對底層做更新的時候，   就不用一台一台去作更新，可以一併去做更新，但壞處也是一樣，當有漏洞時   ，就等於整個容器都會被破壞。  
102	W11	120	63	  我覺得講座非常專業，不管使用甚麼都清楚了解每一個步驟，了解每一個步驟是在幹嘛，結果是怎樣。每一個步驟他都很詳細的跟我們講解，讓我們了解自己在做甚麼，就算我們不了解，也可以問講師，他會把我們的問題解釋的更清楚，讓我們可做到他想我們完成的東西，非常感謝講師的教導。  
103	W11	239	80	  這堂課講者講述了我們的Apps在那裏的地方，會存在甚麼樣的地方。關於虛擬主機是什麼，他主要內容可以幫助應用程式做些什麼事性，在容器主要有Linux丶windows 丶cloud丶 Drones丶 Raspberry 丶PI丶 IoT這些容器主要可以有如何的運作模式。容器與虛擬電腦之間的關係有什麼作用，什麼是Docker等等。今次主要的實際操作為容器是Microsoft Azure Windows 2019 Datacenter with Containers ，AKS和VM 之間的互動。在這次課堂上我覺得我學到了非常之多的東西，在開始漸漸解了更關於azure的功能以及作用，令我對於Azure 作用又有加深多一層的了解以及認識。  
104	W11	397	100	  今天微軟講師是讓我了解到Azure for Containers，那Azure容器執行個體文件，在受控、無伺服器的 Azure 環境中，視需要執行Docker容器，Azure容器執行個體是適用於任何可在隔離容器中運作的案例解決方案，而不需要協調流程，執行事件驅動的應用程式、從容器開發管線快速部署，以及執行資料處理和組建作業。Azure 容器執行個體文件 在受控、無伺服器的 Azure 環境中，視需要執行 Docker 容器，Azure 容器執行個體是適用於任何可在隔離容器中運作的案例解決方案，而不需要協調流程。執行事件驅動的應用程式、從容器開發管線快速部署，以及執行資料處理和組建作業。  
105	W11	349	90	  今天Thomas講師主要講授「Microservices – Docker 」，當中讓我們了解到Docker 是一個 open-source 的專案，主要的特點是能將應用程式包裝在一個 LXC (Linux Container) 容器中，當這些應用被包裝進容器後，部署、遷移都變得更為簡單。與傳統的虛擬化技術相比，虛擬機器需要安裝作業系統才能執行應用程式，而 Container 則不需要安裝作業系統就能執行應用程式。Container 技術是一種在 OS 內的 Kernel 層所打造虛擬執行環境，所以 Container 彼此之間共用了 Host OS 的 Kernel，但透過 namespace 區分來達到隔離每個容器的目的。  如今，微軟在 Azure 上建立 Docker Host，Docker 可以執行在 Linux 作業系統之下，所以若要在 Azure 上使用 Docker，也可以自行建立 VM，並在上面安裝 Docker Deamon 並執行。而微軟在正式宣佈與 Docker 密切合作後，推出了對 Docker 的直接支援，除了可以在 Preview Portal 上建立 Docker VM Extension 外，若選擇透過 xplat-cli 甚至可以透過一行指令就部署指定的 Linux 作業系統，並且預載了 Docker Deamon 可以直接使用。  近一步查找Azure上Docker的優點如下：  1.支援 Linux 和 Windows Server 容器。  2.彈性支援微服務和傳統應用程式工作負載。  3.整合式圖形化使用者介面管理和作業。  4.細微的角色型存取控制 (RBAC)，並支援輕量型目錄存取協定 (LDAP) 與 Azure Active Directory 整合。  5.提供更安全的供應鏈之端對端安全性模型。  
106	W11	126	64	  200  
108	W11	346	89	  Docker 可以執行在 Linux 作業系統之下，所以若要在 Azure 上使用 Docker，您也可以自行建立 VM，並在上面安裝 Docker Deamon 並執行。而微軟在正式宣佈與 Docker 密切合作後，推出了對 Docker 的直接支援，您除了可以在 Preview Portal 上建立 Docker VM Extension 外，若選擇透過 xplat-cli 甚至可以透過一行指令就部署指定的 Linux 作業系統，並且預載了 Docker Deamon 可以直接使用  ###### 安裝虛擬化應用程式  ######  以 redis 為例，官方便提供了 Dockerfile 在他們的 repo 中，若要使用的話只需要透過 docker pull redis 指令即可，再次提醒若要 pull 到遠端的 Docker Host 請指定 host 參數,若不透過 pull 指令的話，也可以手動透過 Dockerfile 來建立 image  
109	W11	143	68	  基於對雲的動態擴展，敏捷性和應用程序可移植性的需求，基於雲的基於微服務的應用程序的出現正在改變IT。 這些雲原生應用程序需要廣泛的基礎架構自動化，安全性和監視。 他們還要求更改向用戶交付應用程序的方式，以保持最佳體驗。 企業正在為使用Kubernetes和開源工具構建的微服務組裝定制平台。 包括平台團隊，站點可靠性工程師，DevOps和應用程序開發人員在內的各種利益相關者聚集在一起，但是每個人都有自己的需求。  在構建本地雲應用程序交付策略時，您需要一個解決方案來滿足利益相關者的獨特需求，並與Kubernetes環境和CNCF工具集成。 理想的解決方案提供了體系結構選擇，同時確保了應用程序可用性和一致的安全性  
110	W11	214	78	  Docker 是個輕量級的虛擬化技術，可以把你的應用程式連同環境一起打包，部屬的時候就不用再擔心環境的問題，所謂的 dockerize 就是把你的應用程式 Docker 化，把你的程式跟環境包成一個 image，部屬的時候就直接使用這個 image 不需要額外安裝其他東西  Docker運作方式  Docker 透過提供執行程式碼的標準方法進行運作。Docker 是容器的作業系統。與虛擬機器虛擬化伺服器硬體的方法相似，容器可虛擬化伺服器的作業系統。Docker 安裝在每部伺服器上，並提供簡單的命令讓您使用以建立、啟動或停止容器。  
